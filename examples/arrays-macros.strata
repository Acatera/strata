`%include "inc/std.inc"

struc Person
    .name: resb 32
    .age: resq 1
    ; .email: resb 64
    .size equ $ - Person
endstruc

%define MAX_PEOPLE 3

section .bss
    hStdOut resq 1
    pPeople resb Person.size * MAX_PEOPLE

section .text
    global _start

_start:
    GetStdHandle(STD_OUTPUT_HANDLE, [hStdOut])
    
    printfh([hStdOut], `"Hello World!\n"`)

    ; fill first record
    array_nth(Person, pPeople, 0, rbx)
    strcpy(rbx, `"John"`, 4)
    mov qword [rbx + Person.age], 42

    ; fill second record
    array_nth(Person, pPeople, 1, rbx)
    strcpy(rbx, `"Jane"`, 4)
    mov qword [rbx + Person.age], 43

    ; print all records
    array_nth(Person, pPeople, 0, rbx) ; rbx = &pPeople[0]
.while_0:
    cmp r15, MAX_PEOPLE
    jge .end_while_0
.do_while_0:
    printfh([hStdOut], `"Record #%d, Name: %s, age: %d\n"`, r15, rbx, qword [rbx + Person.age])
    array_next(Person, rbx)

    inc r15
    jmp .while_0
.end_while_0:

    ExitProcess(0)
`